//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shuttle.Esb {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shuttle.Esb.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find assembly &apos;{0}&apos; during operation &apos;{1}&apos;..
        /// </summary>
        public static string AssemblyNotFound {
            get {
                return ResourceManager.GetString("AssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue factory with type &apos;{0}&apos; create returned (null) for uri &apos;{1}&apos;..
        /// </summary>
        public static string BrokerEndpointFactoryCreatedNull {
            get {
                return ResourceManager.GetString("BrokerEndpointFactoryCreatedNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker endpoint factory type &apos;{0}&apos; could not be instantiated.  Exception: {1}.
        /// </summary>
        public static string BrokerEndpointFactoryInstantiationException {
            get {
                return ResourceManager.GetString("BrokerEndpointFactoryInstantiationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No broker endpoint factory has been registered for scheme &apos;{0}&apos;..
        /// </summary>
        public static string BrokerEndpointFactoryNotFoundException {
            get {
                return ResourceManager.GetString("BrokerEndpointFactoryNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [queue factory registered] : scheme = &apos;{0}&apos; / type &apos;{1}&apos; .
        /// </summary>
        public static string BrokerEndpointFactoryRegistered {
            get {
                return ResourceManager.GetString("BrokerEndpointFactoryRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IServiceBusConfiguration.Resolver has not been assigned..
        /// </summary>
        public static string ConfigurationResolverMissing {
            get {
                return ResourceManager.GetString("ConfigurationResolverMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A configurator wih type name &apos;{0}&apos; has already been registered..
        /// </summary>
        public static string ConfiguratorAlreadyRegisteredException {
            get {
                return ResourceManager.GetString("ConfiguratorAlreadyRegisteredException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [worker available ({0})] worker inbox = {1} / distributor control inbox = {2}.
        /// </summary>
        public static string DebugWorkerAvailable {
            get {
                return ResourceManager.GetString("DebugWorkerAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handler type &apos;{0}&apos; has no default constructor and will be ignored by the DefaultMessageHandlerFactory.  If you need to use this message handler you will need to make use of an IMessageHandlerFactory that can inject the dependency for you..
        /// </summary>
        public static string DefaultMessageHandlerFactoryNoDefaultConstructor {
            get {
                return ResourceManager.GetString("DefaultMessageHandlerFactoryNoDefaultConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one instance of the DeferredMessageProcessor should be created.  Check that the ProcessorThreadPool for the DeferredMessageProcessorFactory is not using more than 1 thread..
        /// </summary>
        public static string DeferredMessageProcessorInstanceException {
            get {
                return ResourceManager.GetString("DeferredMessageProcessorInstanceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A broker endpoint factory for scheme &apos;{0}&apos; already existed.  Removed broker endpoint factory type &apos;{1}&apos; to register broker endpoint factory type &apos;{2}&apos;..
        /// </summary>
        public static string DuplicateBrokerEndpointFactoryReplaced {
            get {
                return ResourceManager.GetString("DuplicateBrokerEndpointFactoryReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered a fatal exception accessing the idempotence service type &apos;{0}&apos;.  Without the idempotence service operational the integrity of the message processing cannot be guaranteed.  The pipeline has been aborted.  Exception: {1}.
        /// </summary>
        public static string FatalIdempotenceServiceException {
            get {
                return ResourceManager.GetString("FatalIdempotenceServiceException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred trying to find a broker endpoint.  Candidate broker endpoint type = &apos;{0}&apos;.  Candidate uri = &apos;{1}&apos;.  Comparison uri = &apos;{2}&apos;.  All exception messages = &apos;{3}&apos;..
        /// </summary>
        public static string FindBrokerEndpointException {
            get {
                return ResourceManager.GetString("FindBrokerEndpointException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handler type &apos;{0}&apos; does not have the required ProcessMessage method that handles message type &apos;{1}&apos;..
        /// </summary>
        public static string HandlerMessageMethodMissingException {
            get {
                return ResourceManager.GetString("HandlerMessageMethodMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only scheme &apos;{0}&apos; is supported.  The given uri &apos;{1}&apos; is not supported..
        /// </summary>
        public static string InvalidSchemeException {
            get {
                return ResourceManager.GetString("InvalidSchemeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri specified as the &apos;{0}&apos; is not a valid uri.  The value configured is &apos;{1}&apos;..
        /// </summary>
        public static string MappingInvalidUriException {
            get {
                return ResourceManager.GetString("MappingInvalidUriException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message handler type &apos;{0}&apos; raised exception &apos;{1}&apos;.  Message type &apos;{2}&apos; with id &apos;{3}&apos; has reached the maximum number of retries ({4}).  The message has been moved to error queue &apos;{5}&apos;.
        /// </summary>
        public static string MessageHandlerExceptionFailure {
            get {
                return ResourceManager.GetString("MessageHandlerExceptionFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message handler type &apos;{0}&apos; raised exception &apos;{1}&apos;.  Handling of message type &apos;{2}&apos; with id &apos;{3}&apos; will be retried.  It is retry number: {4} / {5}.
        /// </summary>
        public static string MessageHandlerExceptionWillRetry {
            get {
                return ResourceManager.GetString("MessageHandlerExceptionWillRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [message handler registered] : message type = &apos;{0}&apos; / handler type = &apos;{1}&apos;.
        /// </summary>
        public static string MessageHandlerFactoryHandlerRegistered {
            get {
                return ResourceManager.GetString("MessageHandlerFactoryHandlerRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No handler has been registered for message type &apos;{0}&apos;.  The message (id &apos;{1}&apos;) has been moved to error queue &apos;{2}&apos;..
        /// </summary>
        public static string MessageNotHandledFailure {
            get {
                return ResourceManager.GetString("MessageNotHandledFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No handler has been registered for message type &apos;{0}&apos;.  The message (id &apos;{1}&apos;) has been ignored..
        /// </summary>
        public static string MessageNotHandledIgnored {
            get {
                return ResourceManager.GetString("MessageNotHandledIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message of type &apos;{0}&apos; has been routed to more than one endpoint: {1}.
        /// </summary>
        public static string MessageRoutedToMoreThanOneEndpoint {
            get {
                return ResourceManager.GetString("MessageRoutedToMoreThanOneEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No route could be found for message of type &apos;{0}&apos;..
        /// </summary>
        public static string MessageRouteNotFound {
            get {
                return ResourceManager.GetString("MessageRouteNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compression algorithm &apos;{0}&apos; has not been registered..
        /// </summary>
        public static string MissingCompressionAlgorithmException {
            get {
                return ResourceManager.GetString("MissingCompressionAlgorithmException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption algorithm &apos;{0}&apos; has not been registered..
        /// </summary>
        public static string MissingEncryptionAlgorithmException {
            get {
                return ResourceManager.GetString("MissingEncryptionAlgorithmException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker endpoint &apos;{0}&apos; does not implement interface &apos;{1}&apos;..
        /// </summary>
        public static string NotImplementedOnBrokerEndpoint {
            get {
                return ResourceManager.GetString("NotImplementedOnBrokerEndpoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Observer with type name &apos;{0}&apos; does not have an interface with name &apos;I{0}&apos;..
        /// </summary>
        public static string ObserverInterfaceMissingException {
            get {
                return ResourceManager.GetString("ObserverInterfaceMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a section named &apos;{0}&apos; in configuration file &apos;{1}&apos; that is of type &apos;{2}&apos;..
        /// </summary>
        public static string OpenSectionException {
            get {
                return ResourceManager.GetString("OpenSectionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not execute pipeline &apos;{0}&apos;.  Exception: {1}.
        /// </summary>
        public static string PipelineExecutionException {
            get {
                return ResourceManager.GetString("PipelineExecutionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There has been an exception in the ReceiveMessagePipeline.  No message has been received.  Exception: {0}.
        /// </summary>
        public static string ReceivePipelineExceptionMessageNotReceived {
            get {
                return ResourceManager.GetString("ReceivePipelineExceptionMessageNotReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There has been an exception in the ReceiveMessagePipeline.  The message has been released.  Exception: {0}.
        /// </summary>
        public static string ReceivePipelineExceptionMessageReleased {
            get {
                return ResourceManager.GetString("ReceivePipelineExceptionMessageReleased", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not register handlers from assembly &apos;{0}&apos;.  Exception messages: {1}.
        /// </summary>
        public static string RegisterHandlersException {
            get {
                return ResourceManager.GetString("RegisterHandlersException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no current message.  Cannot reply..
        /// </summary>
        public static string ReplyWithoutCurrentMessage {
            get {
                return ResourceManager.GetString("ReplyWithoutCurrentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current message has no SenderIndexWorkUri.  Cannot reply..
        /// </summary>
        public static string ReplyWithoutSenderInboxWorkUri {
            get {
                return ResourceManager.GetString("ReplyWithoutSenderInboxWorkUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have tried to requeue a message but no inbox has been configured..
        /// </summary>
        public static string RequeueWithNoInbox {
            get {
                return ResourceManager.GetString("RequeueWithNoInbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required broker endpoint uri &apos;{0}&apos; has not been configured...
        /// </summary>
        public static string RequiredBrokerEndpointUriMissing {
            get {
                return ResourceManager.GetString("RequiredBrokerEndpointUriMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a section with key &apos;{0}&apos;..
        /// </summary>
        public static string SectionKeyMissingException {
            get {
                return ResourceManager.GetString("SectionKeyMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send reply as the provided transport message received has no inbox work queue uri..
        /// </summary>
        public static string SendReplyException {
            get {
                return ResourceManager.GetString("SendReplyException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot send a message to this endpoint (Local) since this endpoint has no inbox..
        /// </summary>
        public static string SendToSelfException {
            get {
                return ResourceManager.GetString("SendToSelfException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;{0}&apos; is not registered with the serializer so it cannot be serialized.  Please use [SerialierInstance].AddKnownType to add the type before attempting to serialize or deserialize a TransportMessage containing this type in the object graph of the message property..
        /// </summary>
        public static string SerializerUnknownTypeExcption {
            get {
                return ResourceManager.GetString("SerializerUnknownTypeExcption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service bus instance has already been started..
        /// </summary>
        public static string ServiceBusInstanceAlreadyStarted {
            get {
                return ResourceManager.GetString("ServiceBusInstanceAlreadyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service bus instance has not yet been started..
        /// </summary>
        public static string ServiceBusInstanceNotStarted {
            get {
                return ResourceManager.GetString("ServiceBusInstanceNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have attempted to subscribe to messages but there is no inbox configured..
        /// </summary>
        public static string SubscribeWithNoInboxException {
            get {
                return ResourceManager.GetString("SubscribeWithNoInboxException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deferred checkpoint set to message id &apos;{0}&apos;.
        /// </summary>
        public static string TraceDeferredCheckpointMessageId {
            get {
                return ResourceManager.GetString("TraceDeferredCheckpointMessageId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deferred processing has been halted since the deferred queue is empty.  Once another message is deferred the processing will restart..
        /// </summary>
        public static string TraceDeferredProcessingHalted {
            get {
                return ResourceManager.GetString("TraceDeferredProcessingHalted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deferred processing has completed a cycle and will process again at date &apos;{0}&apos;..
        /// </summary>
        public static string TraceDeferredProcessingReset {
            get {
                return ResourceManager.GetString("TraceDeferredProcessingReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message type &apos;{0}&apos; with id &apos;{1}&apos; delivered to broker endpoint &apos;{2}&apos;..
        /// </summary>
        public static string TraceMessageDelivered {
            get {
                return ResourceManager.GetString("TraceMessageDelivered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transport message with id &apos;{0}&apos; will be deferred until &apos;{1}&apos;..
        /// </summary>
        public static string TraceTransportMessageDeferred {
            get {
                return ResourceManager.GetString("TraceTransportMessageDeferred", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not deserialize the transport message from queue &apos;{0}&apos;.  Exception reported: {1}.
        /// </summary>
        public static string TransportMessageDeserializationException {
            get {
                return ResourceManager.GetString("TransportMessageDeserializationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get type &apos;{0}&apos; for TypeListMessageRouteSpecification..
        /// </summary>
        public static string TypeListMessageRouteSpecificationUnknownType {
            get {
                return ResourceManager.GetString("TypeListMessageRouteSpecificationUnknownType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown message route specification &apos;{0}&apos;.  Cannot create the specification..
        /// </summary>
        public static string UnknownMessageRouteSpecification {
            get {
                return ResourceManager.GetString("UnknownMessageRouteSpecification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not get type: {0}.
        /// </summary>
        public static string UnknownTypeException {
            get {
                return ResourceManager.GetString("UnknownTypeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected uri format &apos;{0}&apos; but received &apos;{1}&apos;..
        /// </summary>
        public static string UriFormatException {
            get {
                return ResourceManager.GetString("UriFormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IUriResolver type &apos;{0}&apos; could not resolve name &apos;{1}&apos;..
        /// </summary>
        public static string UriNameNotFoundException {
            get {
                return ResourceManager.GetString("UriNameNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [publishing] : no subscribers / event message type = &apos;{0}&apos;.
        /// </summary>
        public static string WarningPublishWithoutSubscribers {
            get {
                return ResourceManager.GetString("WarningPublishWithoutSubscribers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No inbox has been configured.  A worker requires an inbox..
        /// </summary>
        public static string WorkerRequiresInboxException {
            get {
                return ResourceManager.GetString("WorkerRequiresInboxException", resourceCulture);
            }
        }
    }
}
